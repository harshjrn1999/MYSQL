Q103:-

create table students 
(id int, 
name varchar(15),
marks int);

insert into students VALUES
(1,'Ashley',81),
(2,'Samantha',75),
(3,'Julia',76),
(4,'Belvet',84);

select name from students where marks > 75 order by substr(name, -3), id ;

Q105:-

create table triangles (A int , B int , C int);
insert into triangles values (20,20,23),(20,20,20),
(20,21,22),(13,14,30); 

SELECT
	CASE
	WHEN A + B <= C or A + C <= B or B + C <= A THEN 'Not A Triangle'
	WHEN A = B and B = C THEN 'Equilateral'
	WHEN A = B or A = C or B = C THEN 'Isosceles'
	WHEN A <> B and B <> C THEN 'Scalene'
	END tuple
FROM triangles;


Q107:-

CREATE TABLE EMPLOYEES 
(ID int,
name varchar(20),
salary int CONSTRAINT c1_chk CHECK (1000 < salary < 100000)
);

insert into EMPLOYEES values (1,'Kristeen',1420),
(2,'Ashley',2006),
(3,'Julia',2210),
(4,'Maria',3000);

select ceil(avg(salary) - avg(replace(salary, '0', ''))) from EMPLOYEES;


Q108:-


create table employee
(
employee_id int,
name varchar(30),
months int,
salary int);

insert into employee values
(12228,'Rose',15,1968),
(33645,'Angela',1,3443),(45692,'Frank',17,1608),
(56118,'Patrick',7,1345),(59725,'Lisa',11,2330),
(74197,'Kimberly',16,4372),(78454,'Bonnie',8,1771),
(83565,'Michael',6,2017),(98607,'Todd',5,3396),
(99989,'Joe',9,3573);


select months*salary as salary, count(*) as count from employee
group by salary
order by salary desc
limit 1;

Q110-

create table BST(N int, P int);
insert into BST VALUES
(1,2),(3,2),(6,8),(9,8),(2,5),(8,5),(5,null);

SELECT N,
	CASE
	WHEN P IS NULL THEN 'Root'
	WHEN (SELECT COUNT(*) FROM BST WHERE B.N=P)>0 THEN 'Inner'
	ELSE 'Leaf'
END AS PLACE
FROM BST B
ORDER BY N;

Q111:-







