Question 1:-

CREATE table CITY(

id int,
name varchar(17),
countrycode varchar(3),
district varchar(20),
population bigint
);

insert into CITY VALUES
(3878,'Scottsdale','USA','Arizona',202705),
(3965,'Corona','USA','California',124966),
(3973,'Concord','USA','California',121780),
(3977,'Cedar Rapids','USA','Iowa',120758),
(3982,'Coral Springs','USA','Florida',117549),
(4054,'Fairfield','USA','California',92256),
(4058,'Boulder','USA','Colorado',91238),
(4061,'Fall River','USA','Massachusetts',90555);

select * from CITY where countrycode = 'USA' and population  > 100000;

Question 2:- 

select * from CITY where countrycode = 'USA' and population  > 120000;

Question 3:-

SELECT * from CITY
Question 4:-

select * from CITY where id = 1661;

Question 5:-
select * from CITY where countrycode = 'JPN';

Question 6:-
select name from CITY where countrycode = 'JPN';

Question 7:-

create table station(
id int,
city varchar(21),
state varchar(2),
lat_n float,
lat_w float
);

SELECT CITY,STATE FROM station; 

Question 8:-

select distinct city from station where mod(id,2)=0 order by city asc;

Question 9:-

select count(city) as city_no - count(distinct city) as dis_city from station;
(select CITY, length(CITY) as city_len from STATION order by city_len asc, CITY asc limit 1) union
(select CITY, length(city) as city_len from STATION order by city_len desc, CITY asc limit 1);


Question 10

SELECT DISTINCT(CITY) FROM station WHERE CITY LIKE 'A%' OR CITY LIKE 'E%' OR CITY LIKE 'I%' OR CITY LIKE 'O%' 
OR CITY LIKE 'U%' ORDER BY CITY ASC;

Question 11
select distinct(city) from station where city like '%a' or city like '%e' or city like '%i' or city like '%o' or city like '%u';

Question 12
SELECT DISTINCT CITY FROM station WHERE upper(SUBSTR(CITY,1,1)) NOT IN ('A','E','I','O','U') AND lower(SUBSTR(CITY,1,1)) NOT IN
('a','e','i','o','u');     

Question 13
SELECT DISTINCT CITY FROM station WHERE UPPER(SUBSTR(CITY, LENGTH(CITY), 1)) NOT IN ('A','E','I','O','U') AND LOWER(SUBSTR(CITY, LENGTH(CITY),1)) NOT IN ('a','e','i','o','u');    

Question 14
SELECT DISTINCT CITY FROM station WHERE LOWER(SUBSTR(CITY,1,1)) NOT IN ('a','e','i','o','u') OR LOWER(SUBSTR(CITY, LENGTH(CITY),1)) NOT IN ('a','e','i','o','u');   

Question 15
SELECT DISTINCT CITY FROM station WHERE LOWER(SUBSTR(CITY,1,1)) NOT IN ('a','e','i','o','u') AND LOWER(SUBSTR(CITY,LENGTH(CITY),1)) NOT IN ('a','e','i','o','u');    

Question 16

create table product
(product_id int primary key,
product_name varchar(30), 
unit_price int
);

create table sales (
seller_id int,
product_id int, 
buyer_id int, 
sale_date date, 
quantity int, 
price int,
Foreign key (product_id) references product(product_id));

insert into product values
(1,'S8',1000),
(2,'G4',800),
(3,'iPhone',14000);

insert into sales values
(1,1,1,'2019-01-21',2,2000),(1,2,2,'2019-02-17',1,800),
(2,2,3,'2019-06-02',1,800),(3,3,4,'2019-05-13',1,2800);



select product_id,product_name from product
where product_id  in (select product_id from sales where sale_date between '2019-01-01' and '2019-03-31');

Question 17:-

create table views
( article_id int,
author_id int,
viewer_id int,
view_date date);
insert into views values
(1,3,5,'2019-08-01'),(1,3,6,'2019-08-02'),
(2,7,7,'2019-08-01'),(2,7,6,'2019-08-02'),
(4,7,1,'2019-07-22'),(3,4,4,'2019-07-21'),
(3,4,4,'2019-07-21'); 

select author_id as id from views where author_id = viewer_id group by author_id order by author_id asc;

Question 18:-

create table views
( article_id int,
author_id int,
viewer_id int,
view_date date);
insert into views values
(1,3,5,'2019-08-01'),(1,3,6,'2019-08-02'),
(2,7,7,'2019-08-01'),(2,7,6,'2019-08-02'),
(4,7,1,'2019-07-22'),(3,4,4,'2019-07-21'),
(3,4,4,'2019-07-21'); 

select
author_id as id
from views where author_id = viewer_id group by author_id order by author_id asc;

Question 19:-

create table Delivery (delivery_id int primary key,
customer_id int,
order_date date,
customer_pref_delivery_date date);
insert into Delivery values
(1,1,'2019-08-01',' 2019-08-02'),
(2,5,'2019-08-02',' 2019-08-02'),
(3,1,'2019-08-11',' 2019-08-11'),
(4,3,'2019-08-24',' 2019-08-26'),
(5,4,'2019-08-21',' 2019-08-22'),
(6,2,'2019-08-11',' 2019-08-13');

select ifnull(
round(
(select count(*) from Delivery where order_date =
customer_pref_delivery_date)/
(count(delivery_id)) * 100, 2) , 0) as immediate_percentage 
from Delivery;

Question 20:-

create table ads
(ad_id int, user_id int, action enum('Clicked', 'Viewed', 'Ignored'));
insert into ads values
(1,1,'Clicked'),(2,2,'Clicked'),(3,3,'Viewed'),(5,5,'Ignored'),(1,7,'Ignored'),
(2,7,'Viewed'),(3,5,'Clicked'),(1,4,'Viewed'),(2,11,'Viewed'),(1,2,'Clicked');

select ad_id,
(case when clicks+views = 0 then 0 else round(clicks/(clicks+views)*100, 2) 
end) as ctr
from
(select ad_id,
sum(case when action='Clicked' then 1 else 0 end) as clicks,
sum(case when action='Viewed' then 1 else 0 end) as views
from ads group by ad_id) as t order by ctr desc, ad_id asc;

Question 21:-

create table Employee (employee_id int primary key, team_id int);
insert into Employee values(1,8),(2,8),(3,8),(4,7),(5,9),(6,9);

select e.employee_id, (select count(team_id) from Employee where e.team_id = team_id) as team_size
from Employee e

Question 22:-

create table countries
(country_id int primary key,
country_name varchar(30));
create table weather(
country_id int,
weather_state int,
day date,
primary key (country_id , day));
insert into countries values
(2, 'USA'),(3, 'Australia'),(7, 'Peru'),
(5, 'China'),(8, 'Morocco'),(9, 'Spain');
insert into weather values
(2, 15, '2019-11-01'),(2, 12, '2019-10-28'),
(2, 12, '2019-10-27'),(3, -2, '2019-11-10'),
(3, 0, '2019-11-11'),(3, 3, '2019-11-12'),
(5, 16, '2019-11-07'),(5, 18, '2019-11-09'),
(5, 21, '2019-11-23'),(7, 25, '2019-11-28'),
(7, 22, '2019-12-01'),(7, 20, '2019-12-02'),
(8, 25, '2019-11-05'),(8, 27, '2019-11-15'),
(8, 31, '2019-11-25'),(9, 7, '2019-10-23'),(9, 3, '2019-12-23');

select country_name, case when avg(weather_state) <= 15 then "Cold"
when avg(weather_state) >= 25 then "Hot"
else "Warm" end as weather_type
from countries inner join weather
on countries.country_id = weather.country_id
where left(day, 7) = '2019-11'
group by country_name;

Question 23:-

create table prices 
(product_id int,
start_date date,
end_date date,
price int,
primary key (product_id,start_date,end_date));
create table unitsold
(product_id int,
purchase_date date,
units int);
insert into prices values
(1, '2019-02-17', '2019-02-28', 5),
(1, '2019-03-01', '2019-03-22', 20),
(2, '2019-02-01', '2019-02-20', 15),
(2, '2019-02-21', '2019-03-31', 30);
insert into unitsold values
(1, '2019-02-25', 100),
(1, '2019-03-01', 15),
(2, '2019-02-10', 200),
(2, '2019-03-22', 30);


select product_id, 
ifnull(round(sum(prices_sum) / sum(units), 2), 0) as average_price
from (
select p.product_id as product_id, units, price * units as prices_sum
from prices p left join unitsold u
on p.product_id = u.product_id and purchase_date between start_date
and end_date
) as temp
group by product_id;

Question 24:-

create table activity(
player_id int ,
device_id int,
event_date date ,
games_played int,
primary key (player_id,event_date));
insert into activity VALUES
(1, 2, '2016-03-01', 5),
(1, 2, '2016-03-02', 6),
(2, 3, '2017-06-25', 1),
(3, 1, '2016-03-01', 0),
(3, 4, '2016-07-03', 5);


select player_id, min(event_date) as first_login
from activity 
group by player_id;

Question 26-

create table Products (product_id int primary key,
product_namevarchar(30), product_category varchar(30));
create table orders (product_id int,order_date date,unit int);
insert into Products values
(1,'Leetcode Solutions','Book'),(2,'Jewels of Stringology','Book'),
(3,'HP','Laptop'),(4,'Lenovo','Laptop'),(5,'Leetcode Kit', 'T-shirt');
insert into orders values
(1,'2020-02-05',60),(1,'2020-02-10',70),
(2,'2020-01-18',30),(2,'2020-02-11',80),
(3,'2020-02-17',2),(3,'2020-02-24',3),
(4,'2020-03-01',20),(4,'2020-03-04',30),
(4,'2020-03-04',60),(5,'2020-02-25',50),
(5,'2020-02-27',50),(5,'2020-03-01',50);

select a.product_name, sum(unit) as unit
from Products a
left join Orders b
on a.product_id = b.product_id
where b.order_date between '2020-02-01' and '2020-02-29'
group by a.product_id
having sum(unit) >= 100

Question 27:-

create table users 
( user_id int primary key, 
name varchar(30),
mail varchar(50));
insert into users values
(1, 'Winston','winston@leetcode.com'),
(2 ,'Jonathan', 'jonathanisgreat'),
(3, 'Annabelle','bella-@leetcode.com'),
(4, 'Sally','sally.come@leetcode.com'),
(5, 'Marwan','quarz#2020@leetcode.com'),
(6, 'David','david69@gmail.com'),
(7, 'Shapiro','.shapo@leetcode.com');


SELECT *
FROM Users
WHERE REGEXP_LIKE(mail, '^[a-zA-Z][a-zA-Z0-9\_\.\-]*@leetcode.com')

Quetion 28:-

create table customer 
(customer_id int primary key,
name varchar(30),
country varchar(30));

insert into customer values
(1,'Winston','USA'),
(2,'Jonathan','Peru'),
(3,'Moustafa','Egypt');


create table product 
(product_id int primary key,
description varchar(50),
price int);

insert into product values
(10, 'LC Phone', 300),
(20, 'LC T-Shirt', 10),
(30, 'LC Book', 45),
(40, 'LC Keychain', 2);

create table orders
(order_id int primary key,
customer_id int,product_id int , order_date date,
quantity int);

insert into orders values
(1, 1, 10, '2020-06-10', 1),
(2, 1, 20, '2020-07-01', 1),
(3, 1, 30, '2020-07-08', 2),
(4, 2, 10, '2020-06-15', 2),
(5, 2, 40, '2020-07-01', 10),
(6, 3, 20, '2020-06-24', 2),
(7, 3, 30, '2020-06-25', 2),
(9, 3, 30, '2020-05-08', 2);


select c.customer_id, c.name
from customer c join orders o on c.customer_id = o.customer_id
join product p on o.product_id = p.product_id
group by c.customer_id, c.name
having
sum(case when left(o.order_date, 7) = '2020-06' then p.price * o.quantity 
else 0 end) >= 100
and
sum(case when left(o.order_date, 7) = '2020-07' then p.price * o.quantity 
else 0 end) >= 100;

Question 29:-

create table TVProgram
(program_date date, content_id int,channel varchar(30),
primary key(program_date,content_id));

insert into TVProgram values
('2020-06-10 08:00', 1, 'LC-Channel'),
('2020-05-11 12:00', 2, 'LC-Channel'),
('2020-05-12 12:00', 3, 'LC-Channel'),
('2020-05-13 14:00', 4, 'Disney Ch'),
('2020-06-18 14:00', 4, 'Disney Ch'),
('2020-07-15 16:00', 5, 'Disney Ch');

create table Content 
(content_id int primary key,
title varchar(20),
kids_content enum('Y','N'),
content_type varchar(20));

insert into Content values
(1, 'Leetcode Movie', 'N', 'Movies'),
(2, 'Alg. for Kids', 'Y', 'Series'),
(3, 'Database Sols', 'N', 'Series'),
(4, 'Aladdin', 'Y', 'Movies'),
(5, 'Cinderella', 'Y', 'Movies'); 

select distinct title
from Content 
join TVProgram using(content_id)
where kids_content = 'Y' 
	and content_type = 'Movies' 
	and (month(program_date), year(program_date)) = (6, 2020)
	
Question 30:-

create table NPV (id int ,year int,npv int, primary key (id,year));

insert into NPV values (1, 2018, 100),(7, 2020, 30),
(13, 2019, 40),(1, 2019, 113),
(2, 2008, 121),(3, 2009, 12),
(11, 2020, 99),(7, 2019, 0);

create table queries (id int ,year int,primary key (id,year));

019),(2, 2008),(3, 2009),
(7, 2018),(7, 2019),
(7, 2020),(13, 2019);

select
q.id, q.year, 
ifnull(n.npv,0) as npv
from queries as q
left join NPV as n
on (q.id, q.year) = (n.id, n.year);

Question 31:-

create table NPV (id int ,year int,npv int, primary key (id,year));

insert into NPV values (1, 2018, 100),(7, 2020, 30),
(13, 2019, 40),(1, 2019, 113),
(2, 2008, 121),(3, 2009, 12),
(11, 2020, 99),(7, 2019, 0);

create table queries (id int ,year int,primary key (id,year));

019),(2, 2008),(3, 2009),
(7, 2018),(7, 2019),
(7, 2020),(13, 2019);

select
q.id, q.year, 
ifnull(n.npv,0) as npv
from queries as q
left join NPV as n
on (q.id, q.year) = (n.id, n.year);

Question 32:-

create table employee 
( id int primary key,name varchar(30));

insert into employee values
(1, 'Alice'),
(7, 'Bob'),
(11,'Meir'),
(90, 'Winston'),
(3, 'Jonathan');

create table employeeUNI
(id int, unique_id int , primary key (id,unique_id));

insert into employeeUNI values
(3,1),
(11,2),
(90,3);

select unique_id, name
from employee left join employeeUNI
on employee.id = employeeUNI.id;


Question 33:-

create table users(id int primary key, name varchar(30));

insert into users values(1, 'Alice'),(2, 'Bob'),
(3, 'Alex'),
(4, 'Donald'),
(7, 'Lee'),
(13,'Jonathan'),
(19,'Elvis');


create table rides (id int primary key,user_id int,distance int);

insert into rides values (1, 1, 120),(2, 2, 317),
(3, 3, 222),(4, 7, 100),
(5, 13, 312),
(6, 19, 50),
(7, 7, 120),
(8, 19, 400),
(9, 7, 230);


select name, sum(ifnull(distance, 0)) as travelled_distance
from rides r
right join users u
on r.user_id = u.id
group by name
order by 2 desc,1 asc

Question 34:-

create table TVProgram
(program_date date, content_id int,channel varchar(30),
primary key(program_date,content_id));

insert into TVProgram values
('2020-06-10 08:00', 1, 'LC-Channel'),
('2020-05-11 12:00', 2, 'LC-Channel'),
('2020-05-12 12:00', 3, 'LC-Channel'),
('2020-05-13 14:00', 4, 'Disney Ch'),
('2020-06-18 14:00', 4, 'Disney Ch'),
('2020-07-15 16:00', 5, 'Disney Ch');

create table Content 
(content_id int primary key,
title varchar(20),
kids_content enum('Y','N'),
content_type varchar(20));

insert into Content values
(1, 'Leetcode Movie', 'N', 'Movies'),
(2, 'Alg. for Kids', 'Y', 'Series'),
(3, 'Database Sols', 'N', 'Series'),
(4, 'Aladdin', 'Y', 'Movies'),
(5, 'Cinderella', 'Y', 'Movies'); 

select distinct title
from Content 
join TVProgram using(content_id)
where kids_content = 'Y' 
	and content_type = 'Movies' 
	and (month(program_date), year(program_date)) = (6, 2020)
	
Quetion 36:-

create table users(id int primary key, name varchar(30));

insert into users values(1, 'Alice'),(2, 'Bob'),
(3, 'Alex'),
(4, 'Donald'),
(7, 'Lee'),
(13,'Jonathan'),
(19,'Elvis');


create table rides (id int primary key,user_id int,distance int);

insert into rides values (1, 1, 120),(2, 2, 317),
(3, 3, 222),(4, 7, 100),
(5, 13, 312),
(6, 19, 50),
(7, 7, 120),
(8, 19, 400),
(9, 7, 230);


select name, sum(ifnull(distance, 0)) as travelled_distance
from rides r
right join users u
on r.user_id = u.id
group by name
order by 2 desc,1 asc

Question 37:-

create table employee 
( id int primary key,name varchar(30));

insert into employee values
(1, 'Alice'),
(7, 'Bob'),
(11,'Meir'),
(90, 'Winston'),
(3, 'Jonathan');

create table employeeUNI
(id int, unique_id int , primary key (id,unique_id));

insert into employeeUNI values
(3,1),
(11,2),
(90,3);

select unique_id, name
from employee left join employeeUNI
on employee.id = employeeUNI.id;

Question 38:-

create table Departments (id int primary key, name varchar(30));

insert into Departments values
(1, 'Electrical Engineering'),
(7, 'Computer Engineering'),
(13, 'Business Administration');

create table students (id int primary key,
name varchar(30),
department_id int);

insert into students values
(23, 'Alice', 1),
(1, 'Bob', 7),
(5, 'Jennifer', 13),
(2, 'John', 14),
(4, 'Jasmine', 77),
(3, 'Steve', 74),
(6, 'Luis', 1),
(8, 'Jonathan', 7),
(7, 'Daiana', 33),
(11, 'Madelynn', 1);

SELECT id, name 
FROM Students
WHERE department_id not in (SELECT id from Departments)

Question 40:-

create table prices 
(product_id int,
start_date date,
end_date date,
price int,
primary key (product_id,start_date,end_date));
create table unitsold
(product_id int,
purchase_date date,
units int);
insert into prices values
(1, '2019-02-17', '2019-02-28', 5),
(1, '2019-03-01', '2019-03-22', 20),
(2, '2019-02-01', '2019-02-20', 15),
(2, '2019-02-21', '2019-03-31', 30);
insert into unitsold values
(1, '2019-02-25', 100),
(1, '2019-03-01', 15),
(2, '2019-02-10', 200),
(2, '2019-03-22', 30);

Question 41:-

create table warehouse
(name varchar(30),
product_id int,
units int,
primary key (name,product_id));

insert into warehouse values
('LCHouse1',1,1),
('LCHouse1',2,10),
('LCHouse1',3,5),
('LCHouse2',1,2),
('LCHouse2',2,2),
('LCHouse3',4,1);

create table products
(product_id int primary key,
product_name varchar(30),
width int,
length int,
height int);

insert into products value
(1, 'LC-TV', 5, 50, 40),
(2, 'LC-KeyChain', 5, 5, 5),
(3, 'LC-Phone', 2, 10, 10),
(4, 'LC-T-Shirt', 4, 10, 20);

create table products
(product_id int primary key,
product_name varchar(30),
width int,
length int,
height int);

insert into products value
(1, 'LC-TV', 5, 50, 40),
(2, 'LC-KeyChain', 5, 5, 5),
(3, 'LC-Phone', 2, 10, 10),
(4, 'LC-T-Shirt', 4, 10, 20);


select name as warehouse_name, sum(units * vol) as volume
from warehouse w
join (select product_id, Width*Length*Height as vol
from products) p
on w.product_id = p.product_id
group by name;


Question 42:-

create table sales (sale_date date, fruit enum('apples','oranges'),
sold_num int, primary key (sale_date,fruit));


insert into sales values
('2020-05-01', 'apples', 10),
('2020-05-01', 'oranges', 8),
('2020-05-02', 'apples', 15),
('2020-05-02', 'oranges', 15),
('2020-05-03', 'apples', 20),
('2020-05-03', 'oranges', 0),
('2020-05-04', 'apples', 15),
('2020-05-04', 'oranges', 1);


select date(sale_date) as sale_date,
sum(case when fruit = 'apples' then sold_num
when fruit = 'oranges' then -sold_num end) as diff
from sales
group by 1 order by 1;

Question 44:-

create table employee 
(id int primary key,
name varchar(30),
department varchar(30),
managerId int);

insert into employee values
(101, 'John', 'A', null),
(102, 'Dan', 'A', 101),
(103, 'James', 'A', 101),
(104, 'Amy', 'A', 101),
(105, 'Anne', 'A', 101),
(106, 'Ron', 'B', 101);

select Name from employee
where Id in
(
select ManagerId from employee
group by 1
having count(*) >= 5
);

Q 46:-

create table customer 
(customer_id int, product_key int,
foreign key (product_key) references product(product_key));

create table product
(product_key int primary key);

insert into product values
(5),(6);

insert into customer values
(1,5),
(2,6),
(3,5),
(3,6),
(1,6);

SELECT
customer_id
FROM customer
GROUP BY customer_id
HAVING COUNT( DISTINCT product_key) = (SELECT COUNT(*) FROM product);


Q 48:-

create table Books (
book_id int,
name varchar(20),
available_from date
);

insert into Books values
(1,"Kalila And Demna",'2010-01-01'),
(2,"28 Letters",'2012-05-12'),
(3,"The Hobbit",'2019-06-10'),
(4,"13 Reasons Why",'2019-06-01'),
(5,"The Hunger Games",'2008-09-21');

create table Orders(
order_id int,
book_id int,
quantity int,
dispatch_date date
);

insert into Orders values
(1,1,2,'2018-07-26'),(2,1,1,'2018-11-05'),
(3,3,8,'2019-06-11'),(4,4,6,'2019-06-05'),
(5,4,5,'2019-06-20'),(6,5,9,'2009-02-02'),
(7,5,8,'2010-04-13');

SELECT DISTINCT b.book_id, b.name
FROM Books b 
WHERE available_from < '2019-05-23'
AND book_id IN
(SELECT book_id
FROM Orders 
WHERE dispatch_date > '2018-06-23'
GROUP BY book_id
HAVING SUM(quantity) < 10);

Q49:-

create table enrollments
(student_id int,
course_id int,
grade int,
primary key (student_id,course_id));
insert into enrollments values
(2, 2, 95),
(2, 3, 95),
(1, 1, 90),
(1, 2, 99),
(3, 1, 80),
(3, 2, 75),
(3, 3, 82);

select e1.student_id, min(e1.course_id) as course_id, e1.grade
from enrollments e1
where e1.grade = 
(select max(grade) as max_grade
from enrollments e2;
where e1.student_id = e2.student_id) 
group by e1.student_id,e1.grade
order by e1.student_id;







